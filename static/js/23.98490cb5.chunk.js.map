{"version":3,"sources":["../node_modules/react-use/esm/useLocalStorage.js","components/loaders/Timeseries.js","components/TimeseriesExplorer.js","../../src/shared/uid.ts","../../src/web/Svg.tsx","../../src/web/ContentLoader.tsx","../../src/web/presets/FacebookStyle.tsx"],"names":["noop","useLocalStorage","key","initialValue","options","isClient","Error","deserializer","raw","value","JSON","parse","_a","useState","serializer","String","stringify","localStorageValue","localStorage","getItem","setItem","state","setState","set","useCallback","valOrFunc","newState","remove","removeItem","undefined","TimeseriesLoader","windowWidth","window","innerWidth","width","viewBox","height","speed","cx","cy","r","Timeseries","lazy","React","memo","timeseries","timelineDate","date","regionHighlighted","setRegionHighlighted","anchor","setAnchor","stateCodes","t","useTranslation","TIMESERIES_OPTIONS","MONTH","timeseriesOption","setTimeseriesOption","chartType","setChartType","isUniform","setIsUniform","isLog","setIsLog","explorerElement","useRef","isVisible","useIsVisible","once","dates","useMemo","today","getIndiaYesterdayISO","pastDates","Object","keys","filter","TWO_WEEKS","cutOffDate","formatISO","sub","parseIndiaDate","weeks","representation","months","handleChange","target","stateCode","districtName","resetDropdown","className","classnames","stickied","style","display","ref","onClick","bind","this","entries","TIMESERIES_CHART_TYPES","map","index","ctype","htmlFor","id","type","checked","aria-label","onChange","disabled","STATE_NAMES","fallback","values","option","selected","size","prevProps","currProps","equal","SVG","animate","backgroundColor","backgroundOpacity","baseUrl","children","foregroundColor","foregroundOpacity","gradientRatio","uniqueKey","interval","rtl","title","fixedId","Math","random","toString","substring","idClip","idGradient","idAria","rtlStyle","transform","keyTimes","dur","React.createElement","role","props","x","y","clipPath","fill","offset","stopColor","stopOpacity","attributeName","repeatCount","defaultProps","ContentLoader","Svg","Facebook","ReactContentLoaderFacebook","rx"],"mappings":"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","file":"static/js/23.98490cb5.chunk.js","sourcesContent":["/* eslint-disable */\nimport { useState, useCallback } from 'react';\nimport { isClient } from './util';\nvar noop = function () { };\nvar useLocalStorage = function (key, initialValue, options) {\n    if (!isClient) {\n        return [initialValue, noop, noop];\n    }\n    if (!key) {\n        throw new Error('useLocalStorage key may not be falsy');\n    }\n    var deserializer = options ? (options.raw ? function (value) { return value; } : options.deserializer) : JSON.parse;\n    var _a = useState(function () {\n        try {\n            var serializer = options ? (options.raw ? String : options.serializer) : JSON.stringify;\n            var localStorageValue = localStorage.getItem(key);\n            if (localStorageValue !== null) {\n                return deserializer(localStorageValue);\n            }\n            else {\n                initialValue && localStorage.setItem(key, serializer(initialValue));\n                return initialValue;\n            }\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. JSON.parse and JSON.stringify\n            // can throw, too.\n            return initialValue;\n        }\n    }), state = _a[0], setState = _a[1];\n    var set = useCallback(function (valOrFunc) {\n        try {\n            var newState = typeof valOrFunc === 'function' ? valOrFunc(state) : valOrFunc;\n            if (typeof newState === 'undefined')\n                return;\n            var value = void 0;\n            if (options)\n                if (options.raw)\n                    if (typeof newState === 'string')\n                        value = newState;\n                    else\n                        value = JSON.stringify(newState);\n                else if (options.serializer)\n                    value = options.serializer(newState);\n                else\n                    value = JSON.stringify(newState);\n            else\n                value = JSON.stringify(newState);\n            localStorage.setItem(key, value);\n            setState(deserializer(value));\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw. Also JSON.stringify can throw.\n        }\n    }, [key, setState]);\n    var remove = useCallback(function () {\n        try {\n            localStorage.removeItem(key);\n            setState(undefined);\n        }\n        catch (_a) {\n            // If user is in private mode or has storage restriction\n            // localStorage can throw.\n        }\n    }, [key, setState]);\n    return [state, set, remove];\n};\nexport default useLocalStorage;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst TimeseriesLoader = () => {\n  const windowWidth = window.innerWidth;\n  const width = windowWidth > 769 ? 480 : windowWidth;\n  const height = 160 * 5;\n\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default TimeseriesLoader;\n","import TimeseriesLoader from './loaders/Timeseries';\n\nimport {\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_OPTIONS,\n  STATE_NAMES,\n} from '../constants';\nimport useIsVisible from '../hooks/useIsVisible';\nimport {getIndiaYesterdayISO, parseIndiaDate} from '../utils/commonFunctions';\n\nimport {IssueOpenedIcon, PinIcon, ReplyIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {formatISO, sub} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n  lazy,\n  Suspense,\n} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useLocalStorage} from 'react-use';\n\nconst Timeseries = lazy(() => import('./Timeseries'));\n\nfunction TimeseriesExplorer({\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  stateCodes,\n}) {\n  const {t} = useTranslation();\n  const [timeseriesOption, setTimeseriesOption] = useState(\n    TIMESERIES_OPTIONS.MONTH\n  );\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', true);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= today\n    );\n\n    if (timeseriesOption === TIMESERIES_OPTIONS.TWO_WEEKS) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {weeks: 2}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    } else if (timeseriesOption === TIMESERIES_OPTIONS.MONTH) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {months: 1}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    }\n    return pastDates;\n  }, [timeseries, timelineDate, timeseriesOption]);\n\n  const handleChange = useCallback(\n    ({target}) => {\n      setRegionHighlighted({\n        stateCode: target.value,\n        districtName: null,\n      });\n    },\n    [setRegionHighlighted]\n  );\n\n  const resetDropdown = useCallback(() => {\n    setRegionHighlighted({\n      stateCode: 'TT',\n      districtName: null,\n    });\n  }, [setRegionHighlighted]);\n\n  return (\n    <div\n      className={classnames('TimeseriesExplorer fadeInUp', {\n        stickied: anchor === 'timeseries',\n      })}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={\n            setAnchor &&\n            setAnchor.bind(this, anchor === 'timeseries' ? null : 'timeseries')\n          }\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(\n            ([ctype, value], index) => (\n              <div\n                className={`tab ${chartType === ctype ? 'focused' : ''}`}\n                key={ctype}\n                onClick={setChartType.bind(this, ctype)}\n              >\n                <h4>{t(value)}</h4>\n              </div>\n            )\n          )}\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t('Scale Modes')}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              className=\"switch\"\n              checked={isUniform}\n              aria-label={t('Checked by default to scale uniformly.')}\n              onChange={setIsUniform.bind(this, !isUniform)}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              chartType !== 'total' ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={chartType === 'total' && isLog}\n              className=\"switch\"\n              disabled={chartType !== 'total'}\n              onChange={setIsLog.bind(this, !isLog)}\n            />\n          </div>\n        </div>\n      </div>\n\n      {stateCodes && (\n        <div className=\"state-selection\">\n          <div className=\"dropdown\">\n            <select value={regionHighlighted.stateCode} onChange={handleChange}>\n              {stateCodes.map((stateCode) => {\n                return (\n                  <option value={stateCode} key={stateCode}>\n                    {t(STATE_NAMES[stateCode])}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n          <div className=\"reset-icon\" onClick={resetDropdown}>\n            <ReplyIcon />\n          </div>\n        </div>\n      )}\n\n      {isVisible && (\n        <Suspense fallback={<TimeseriesLoader />}>\n          <Timeseries\n            stateCode={regionHighlighted.stateCode}\n            {...{timeseries, dates, chartType, isUniform, isLog}}\n          />\n        </Suspense>\n      )}\n\n      {!isVisible && <div style={{height: '50rem'}} />}\n\n      <div className=\"pills\">\n        {Object.values(TIMESERIES_OPTIONS).map((option) => (\n          <button\n            key={option}\n            type=\"button\"\n            className={classnames({selected: timeseriesOption === option})}\n            onClick={() => setTimeseriesOption(option)}\n          >\n            {t(option)}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"alert\">\n        <IssueOpenedIcon size={24} />\n        <div className=\"alert-right\">\n          {t('Tested chart is independent of uniform scaling')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  }\n  if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeseriesExplorer, isEqual);\n","export default (): string =>\n  Math.random()\n    .toString(36)\n    .substring(6)\n","import * as React from 'react'\n\nimport uid from '../shared/uid'\nimport { IContentLoaderProps } from './'\n\nconst SVG: React.FC<IContentLoaderProps> = ({\n  animate,\n  backgroundColor,\n  backgroundOpacity,\n  baseUrl,\n  children,\n  foregroundColor,\n  foregroundOpacity,\n  gradientRatio,\n  uniqueKey,\n  interval,\n  rtl,\n  speed,\n  style,\n  title,\n  ...props\n}) => {\n  const fixedId = uniqueKey || uid()\n  const idClip = `${fixedId}-diff`\n  const idGradient = `${fixedId}-animated-diff`\n  const idAria = `${fixedId}-aria`\n\n  const rtlStyle = rtl ? { transform: 'scaleX(-1)' } : null\n  const keyTimes = `0; ${interval}; 1`\n  const dur = `${speed}s`\n\n  return (\n    <svg\n      aria-labelledby={idAria}\n      role=\"img\"\n      style={{ ...style, ...rtlStyle }}\n      {...props}\n    >\n      {title ? <title id={idAria}>{title}</title> : null}\n      <rect\n        role=\"presentation\"\n        x=\"0\"\n        y=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        clipPath={`url(${baseUrl}#${idClip})`}\n        style={{ fill: `url(${baseUrl}#${idGradient})` }}\n      />\n\n      <defs role=\"presentation\">\n        <clipPath id={idClip}>{children}</clipPath>\n\n        <linearGradient id={idGradient}>\n          <stop\n            offset=\"0%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio}; ${-gradientRatio}; 1`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"50%\"\n            stopColor={foregroundColor}\n            stopOpacity={foregroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`${-gradientRatio / 2}; ${-gradientRatio / 2}; ${1 +\n                  gradientRatio / 2}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n\n          <stop\n            offset=\"100%\"\n            stopColor={backgroundColor}\n            stopOpacity={backgroundOpacity}\n          >\n            {animate && (\n              <animate\n                attributeName=\"offset\"\n                values={`0; 0; ${1 + gradientRatio}`}\n                keyTimes={keyTimes}\n                dur={dur}\n                repeatCount=\"indefinite\"\n              />\n            )}\n          </stop>\n        </linearGradient>\n      </defs>\n    </svg>\n  )\n}\n\nSVG.defaultProps = {\n  animate: true,\n  backgroundColor: '#f5f6f7',\n  backgroundOpacity: 1,\n  baseUrl: '',\n  foregroundColor: '#eee',\n  foregroundOpacity: 1,\n  gradientRatio: 2,\n  id: null,\n  interval: 0.25,\n  rtl: false,\n  speed: 1.2,\n  style: {},\n  title: 'Loading...',\n}\n\nexport default SVG\n","import * as React from 'react'\n\nimport { Facebook, IContentLoaderProps } from '.'\nimport Svg from './Svg'\n\nconst ContentLoader: React.FC<IContentLoaderProps> = props =>\n  props.children ? <Svg {...props} /> : <Facebook {...props} />\n\nexport default ContentLoader\n","import * as React from 'react'\n\nimport { IContentLoaderProps } from '..'\nimport ContentLoader from '../ContentLoader'\n\nconst ReactContentLoaderFacebook: React.FC<IContentLoaderProps> = props => (\n  <ContentLoader viewBox=\"0 0 476 124\" {...props}>\n    <rect x=\"48\" y=\"8\" width=\"88\" height=\"6\" rx=\"3\" />\n    <rect x=\"48\" y=\"26\" width=\"52\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"56\" width=\"410\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"72\" width=\"380\" height=\"6\" rx=\"3\" />\n    <rect x=\"0\" y=\"88\" width=\"178\" height=\"6\" rx=\"3\" />\n    <circle cx=\"20\" cy=\"20\" r=\"20\" />\n  </ContentLoader>\n)\n\nexport default ReactContentLoaderFacebook\n"],"sourceRoot":""}